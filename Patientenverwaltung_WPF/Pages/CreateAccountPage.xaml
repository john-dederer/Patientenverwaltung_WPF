<Page x:Class="Patientenverwaltung_WPF.CreateAccountPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Patientenverwaltung_WPF"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="CreateAccountPage" Width="430" Height="551">
    <Page.Resources>
        <Color x:Key="BackgroundColor">#FF0414AE</Color>
        <Storyboard x:Key="OnLoaded1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="txtBoxUsername">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="txtBoxUsername">
                <EasingDoubleKeyFrame KeyTime="0" Value="-92"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock">
                <EasingDoubleKeyFrame KeyTime="0" Value="-92"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PositionBoxes">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="txtBoxUsername">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="txtBoxUsername">
                <EasingDoubleKeyFrame KeyTime="0" Value="88"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="88"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock">
                <EasingDoubleKeyFrame KeyTime="0" Value="88"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="88"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Testing"/>
        <Storyboard x:Key="CreateUser">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="txtBoxName">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="txtName">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="txtBoxTitle">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="txtName_Copy">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="txtBoxName">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.17"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.6"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="txtName">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.17"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.6"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="txtBoxTitle">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.17"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.6"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="txtName_Copy">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.17"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.6"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="btnCreateAccount">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="16.675"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="32.683"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="53.36"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="68.034"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="92.045"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnCreateAccount">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.038"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>
    <Page.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource CreateUser}"/>
        </EventTrigger>
    </Page.Triggers>

    <Grid x:Name="Login" DataContext="{Binding NewUser, ValidatesOnDataErrors=True}">
        <Grid.Background>
            <SolidColorBrush Color="{DynamicResource BackgroundColor}"/>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50.249"/>
            <ColumnDefinition Width="161"/>
            <ColumnDefinition Width="160.862"/>
            <ColumnDefinition Width="49.978"/>
        </Grid.ColumnDefinitions>
        <TextBox x:Name="txtBoxUsername" HorizontalAlignment="Right" Height="31.236" Margin="0,219.828,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="321.862" Grid.Column="1" Grid.ColumnSpan="2" TextAlignment="Left" Padding="0,2" RenderTransformOrigin="0.5,0.5" TabIndex="3" Text="{Binding Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Validation.Error="Validation_Error">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>

            <TextBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBox.RenderTransform>
        </TextBox>
        <TextBlock x:Name="textBlock" Grid.Column="1" HorizontalAlignment="Left" Height="18.828" TextWrapping="Wrap" VerticalAlignment="Top" Width="112.526" Foreground="White" RenderTransformOrigin="0.5,0.5" Margin="0,201,0,0">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform><Run Text="Username"/><LineBreak/><Run/></TextBlock>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Height="18.828" Margin="0,265.048,0,0" TextWrapping="Wrap" Text="Passwort" VerticalAlignment="Top" Width="112.526" Foreground="White"/>
        <Button x:Name="btnCreateAccount" Content="Anlegen" HorizontalAlignment="Left" Height="35" Margin="0,352,0,0" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Width="144.32" Background="#FF0414AE" Foreground="White" RenderTransformOrigin="0.5,0.5" Grid.Column="1" Command="{Binding CreateCommand}" CommandParameter="{Binding ElementName=passwordBox}" TabIndex="5">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.BorderBrush>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFCCCCCC" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Button.BorderBrush>
        </Button>
        <Button x:Name="btnBackToLogin" Content="Zurück" Grid.Column="1" HorizontalAlignment="Left" Height="35" Margin="86.84,506.09,0,0" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Width="147.751" Background="#FF0414AE" Foreground="White" BorderBrush="{x:Null}" Grid.ColumnSpan="2" Click="btnBackToLogin_Click" TabIndex="6"/>
        <local:Test Grid.ColumnSpan="2" Grid.Column="1" Margin="135.751,28.667,136.111,472.423"/>

        
        <StackPanel Grid.Column="1" Grid.ColumnSpan="2">
            <StackPanel.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Margin" Value="0,-31.268,0,0"/>
                </Style>
            </StackPanel.Resources>
            
            <PasswordBox x:Name="passwordBox" local:PasswordHelper.Attach="True" local:PasswordHelper.Password="{Binding Text, ElementName=plainPw , Mode=TwoWay}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,283.876,0,0" VerticalAlignment="Top" Width="322" Height="31.268" VerticalContentAlignment="Center" TabIndex="4"/>
            <TextBox Height="32" x:Name="plainPw" Text="{Binding Passwordhash, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Validation.Error="Validation_Error" Visibility="Hidden"/>
        </StackPanel>
        
        
        <TextBox x:Name="txtBoxName" HorizontalAlignment="Right" Height="31.236" Margin="0,153.788,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="321.862" Grid.Column="1" Grid.ColumnSpan="2" TextAlignment="Left" Padding="0,2" RenderTransformOrigin="0.5,0.5" Visibility="Hidden" Opacity="0.17" TabIndex="2" Text="{Binding Name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Validation.Error="Validation_Error">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBox.RenderTransform>
        </TextBox>
        <TextBlock x:Name="txtName" Grid.Column="1" HorizontalAlignment="Left" Height="18.828" TextWrapping="Wrap" VerticalAlignment="Top" Width="112.526" Foreground="White" RenderTransformOrigin="0.5,0.5" Margin="0,134.96,0,0" Text="Name" Visibility="Hidden" Opacity="0.17">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform></TextBlock>
        <TextBox x:Name="txtBoxTitle" HorizontalAlignment="Right" Height="31.236" Margin="0,91.121,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="321.862" Grid.Column="1" Grid.ColumnSpan="2" TextAlignment="Left" Padding="0,2" RenderTransformOrigin="0.5,0.5" Visibility="Hidden" Opacity="0.17" TabIndex="1" Text="{Binding Title, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Validation.Error="Validation_Error">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBox.RenderTransform>
        </TextBox>
        <TextBlock x:Name="txtName_Copy" Grid.Column="1" HorizontalAlignment="Left" Height="18.828" TextWrapping="Wrap" VerticalAlignment="Top" Width="112.526" Foreground="White" RenderTransformOrigin="0.5,0.5" Margin="0,72.293,0,0" Text="Titel" Visibility="Hidden" Opacity="0.17">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform></TextBlock>
        <Label x:Name="lblInfo" Content="" Grid.Column="1" HorizontalAlignment="Center" Margin="94.763,420.833,87.271,0" Style="{DynamicResource SimpleLabel}" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="34.627" Width="280" Background="#00000000" Foreground="Red" HorizontalContentAlignment="Center"/>
    </Grid>
</Page>
